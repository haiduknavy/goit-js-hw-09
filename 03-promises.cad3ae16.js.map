{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGOC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAG3C,SAASI,EAAcC,EAAUC,GAChC,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACNI,EAAQ,CAAEN,WAAUC,UAElBM,EAAO,CAAEP,WAAUC,S,GAElBA,E,IAKPR,EAAKgB,iBAAiB,UAAU,SAACC,GAC/BA,EAAEC,iBAMF,IAJA,IAAMC,EAAaC,OAAOjB,EAAWkB,OAC/BC,EAAOF,OAAOhB,EAAUiB,OACxBE,EAASH,OAAOf,EAAYgB,OAC9BG,EAAQL,EACHM,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAE/BnB,EAAcmB,EADfD,GAASF,GAEPI,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACpBO,YAAW,WACTjB,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,GAC5DA,E,IAECuB,OAAM,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACvBO,YAAW,WACTjB,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,GACzDA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n const form = document.querySelector('.form');\n const delayInput = document.querySelector('input[name=\"delay\"]');\n const stepInput = document.querySelector('input[name=\"step\"]');\n const amountInput = document.querySelector('input[name=\"amount\"]');\n\n\n function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n    resolve({ position, delay })\n  } else {\n      reject({ position, delay })\n      }\n    }, delay);\n  });\n  return promise;\n};\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n \n  const firstDelay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n  let delay = firstDelay;\n  for (let i = 1; i <= amount; i += 1){\n    delay += step\n     createPromise(i, delay)\n     .then(({ position, delay }) => {\n    setTimeout(() => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }, delay);\n  })\n       .catch(({ position, delay }) => {\n    setTimeout(() => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n  }\n});"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","firstDelay","Number","value","step","amount","delay1","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.cad3ae16.js.map"}