{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGOC,EAAOC,SAASC,cAAc,SACjBD,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBAG3C,SAASC,EAAcC,EAAUC,GAChC,IAAMC,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACNI,EAAQ,CAAEN,WAAUC,UAElBM,EAAO,CAAEP,WAAUC,S,GAElBA,E,IAKPL,EAAKa,iBAAiB,UAEtB,SAAmBC,GACjBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,OAAOb,MAAMc,OAC5BC,EAAOH,OAAOH,EAAEI,OAAOE,KAAKD,OAC5BE,EAASJ,OAAOH,EAAEI,OAAOG,OAAOF,OACtC,GAAIH,EAAQ,GAAKI,EAAO,GAAKC,GAAU,EACrCvB,EAAAwB,OAAOC,QAAQ,0CAEc,IAAxB,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChCrB,EAAcqB,EAAGR,GACdS,MAAK,SAAAC,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MACjBP,EAAAwB,OAAOC,QAAQ,uBAAwCI,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAAK,CAAEuB,SAAS,G,IAE9EC,OAAM,SAAAH,G,IAAGtB,EAAQsB,EAARtB,SAAUC,EAAKqB,EAALrB,MAClBP,EAAAwB,OAAOQ,QAAQ,sBAAqCH,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,MAAK,CAAEuB,SAAS,G,IAE9EZ,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\n const form = document.querySelector('.form');\n const delayInput = document.querySelector('input[name=\"delay\"]');\n const stepInput = document.querySelector('input[name=\"step\"]');\n const amountInput = document.querySelector('input[name=\"amount\"]');\n\n\n function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n    resolve({ position, delay })\n  } else {\n      reject({ position, delay })\n      }\n    }, delay);\n  });\n  return promise;\n};\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit (e){\n  e.preventDefault();\n\n  let delay = Number(e.target.delay.value);\n  const step = Number(e.target.step.value);\n  const amount = Number(e.target.amount.value);\n  if (delay < 0 || step < 0 || amount <= 0){\n    Notify.success('Всі значення мають бути заповнені');\n  } else {\n    for (let i = 1; i <= amount; i += 1) {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { useIcon: false });\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { useIcon: false });\n        });\n      delay += step;\n    }\n  }\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","target","value","step","amount","Notify","success","i","then","param","concat","useIcon","catch","failure"],"version":3,"file":"03-promises.8cdf73f5.js.map"}